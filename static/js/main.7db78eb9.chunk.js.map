{"version":3,"sources":["components/Context.js","components/contact/Contact.js","components/contact/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contact/addContact.js","components/page/About.js","components/page/NotFound.js","components/test/Test.js","components/contact/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","deleteClick","a","delete","name","email","phone","className","onClick","style","color","float","bind","to","marginRight","cursor","fontSize","Contacts","Fragment","key","Header","brand","href","flexDirection","defaultProps","TextInputGroup","label","placeholder","onChange","err","htmlFor","classnames","autoComplete","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","About","match","params","NotFound","Test","title","body","fetch","then","json","EditContact","updateContact","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"mTAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAO,2BACFF,GADL,IAEEG,SAAUH,EAAMG,SAASC,QACvB,SAACC,GAAD,OAAaA,EAAQC,KAAOL,EAAOM,aAGzC,IAAK,cACH,OAAO,2BACFP,GADL,IAEEG,SAAS,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,aAExC,IAAK,iBACH,OAAO,2BACFH,GADL,IAEEG,SAAUH,EAAMG,SAASK,KAAI,SAACH,GAAD,OAC3BA,EAAQC,KAAOL,EAAOM,QAAQD,GACzBD,EAAUJ,EAAOM,QAClBF,OAGV,QACE,OAAOL,IAIQS,E,4MACnBT,MAAQ,CACNG,SAAU,GACVO,SAAU,SAACT,GACT,EAAKU,UAAS,SAACX,GAAD,OAAWD,EAAQC,EAAOC,Q,kMAKxBW,IAAMC,IAAI,8C,OAAtBC,E,OACNC,KAAKJ,SAAS,CAAER,SAAUW,EAAIE,O,qIAI9B,OACE,kBAACpB,EAAQa,SAAT,CAAkBQ,MAAOF,KAAKf,OAC3Be,KAAKG,MAAMC,c,GAhBkBC,aAsBzBC,EAAWzB,EAAQyB,SCcjBC,E,4MA9DbtB,MAAQ,CACNuB,iBAAiB,G,EAGnBC,Y,uCAAc,WAAOlB,EAAII,GAAX,SAAAe,EAAA,sEACNb,IAAMc,OAAN,qDAA2DpB,IADrD,OAGZI,EAAS,CAAER,KAAM,iBAAkBK,QAASD,IAHhC,2C,+GAKJ,IAAD,SAC4BS,KAAKG,MAAMb,QAAtCC,EADD,EACCA,GAAIqB,EADL,EACKA,KAAMC,EADX,EACWA,MAAOC,EADlB,EACkBA,MACjBN,EAAoBR,KAAKf,MAAzBuB,gBACR,OACE,kBAACF,EAAD,MACG,SAACJ,GAAW,IACHP,EAAaO,EAAbP,SACR,OACE,yBAAKoB,UAAU,uBACb,4BACGH,EACD,uBACEI,QAAS,kBACP,EAAKpB,SAAS,CACZY,iBAAkB,EAAKvB,MAAMuB,mBAGjCO,UAAU,qBAEZ,uBACEE,MAAO,CAAEC,MAAO,MAAOC,MAAO,SAC9BJ,UAAU,eACVC,QAAS,EAAKP,YAAYW,KAAK,EAAM7B,EAAII,KAE3C,kBAAC,IAAD,CAAM0B,GAAE,gBAAW9B,IACjB,uBACEwB,UAAU,oBACVE,MAAO,CACLE,MAAO,QACPG,YAAa,OACbC,OAAQ,UACRC,SAAU,YAKjBhB,EACC,wBAAIO,UAAU,cACZ,wBAAIA,UAAU,mBAAd,UAAwCF,GACxC,wBAAIE,UAAU,mBAAd,UAAwCD,IAExC,a,GAnDIT,aCoBPoB,E,uKApBX,OACE,kBAACnB,EAAD,MACG,SAACJ,GAAW,IACHd,EAAac,EAAbd,SACR,OACE,kBAAC,IAAMsC,SAAP,KACE,wBAAIX,UAAU,kBACZ,0BAAMA,UAAU,eAAhB,WADF,SAGC3B,EAASK,KAAI,SAACH,GAAD,OACZ,kBAAC,EAAD,CAASqC,IAAKrC,EAAQC,GAAID,QAASA,e,GAZ5Be,aCAjBuB,EAAS,SAACzB,GAAW,IACjB0B,EAAU1B,EAAV0B,MACR,OACE,yBAAKd,UAAU,2DACb,yBAAKA,UAAU,aACb,uBAAGe,KAAK,IAAIf,UAAU,gBACnBc,GAEH,6BACE,wBAAId,UAAU,qBAAqBE,MAAO,CAACc,cAAe,QACxD,wBAAIhB,UAAU,iBACZ,kBAAC,IAAD,CAAMM,GAAG,IAAIN,UAAU,YACrB,uBAAGA,UAAU,gBADf,UAIF,wBAAIA,UAAU,iBACZ,kBAAC,IAAD,CAAMM,GAAG,OAAON,UAAU,YACxB,uBAAGA,UAAU,gBADf,SAIF,wBAAIA,UAAU,iBACZ,kBAAC,IAAD,CAAMM,GAAG,SAASN,UAAU,YAC1B,uBAAGA,UAAU,oBADf,gBAUda,EAAOI,aAAe,CACpBH,MAAO,UAEMD,Q,iCClCTK,EAAiB,SAAC,GAQjB,IAPLC,EAOI,EAPJA,MACA/C,EAMI,EANJA,KACAyB,EAKI,EALJA,KACAuB,EAII,EAJJA,YACAjC,EAGI,EAHJA,MACAkC,EAEI,EAFJA,SACAC,EACI,EADJA,IAEA,OACE,yBAAKtB,UAAU,cACb,2BAAOuB,QAAS1B,GAAOsB,GACvB,2BACE/C,KAAMA,EACN4B,UAAWwB,IAAW,+BAAgC,CACpD,aAAcF,IAEhBG,aAAa,MACb5B,KAAMA,EACNuB,YAAaA,EACbjC,MAAOA,EACPkC,SAAUA,IAEXC,GAAO,yBAAKtB,UAAU,oBAAoBsB,KAejDJ,EAAeD,aAAe,CAC5B7C,KAAM,QAEO8C,QC+DAQ,E,4MArGbxD,MAAQ,CACN2B,KAAM,GACNC,MAAO,GACPC,MAAO,GACP4B,OAAQ,I,EAGVN,SAAW,SAACO,GACV,EAAK/C,SAAL,eAAiB+C,EAAEC,OAAOhC,KAAO+B,EAAEC,OAAO1C,S,EAG5C2C,S,uCAAW,WAAOlD,EAAUgD,GAAjB,yBAAAjC,EAAA,yDACTiC,EAAEG,iBADO,EAEsB,EAAK7D,MAA5B2B,EAFC,EAEDA,KAAMC,EAFL,EAEKA,MAAOC,EAFZ,EAEYA,MAER,KAATF,EAJK,yCAKA,EAAKhB,SAAS,CAAE8C,OAAQ,CAAE9B,KAAM,uBALhC,UAOK,KAAVC,EAPK,yCAQA,EAAKjB,SAAS,CAAE8C,OAAQ,CAAE7B,MAAO,wBARjC,UAUK,KAAVC,EAVK,yCAWA,EAAKlB,SAAS,CAAE8C,OAAQ,CAAE5B,MAAO,wBAXjC,cAcHiC,EAAa,CACjBnC,OACAC,QACAC,SAjBO,UAoBSjB,IAAMmD,KACtB,6CACAD,GAtBO,QAoBHhD,EApBG,OAwBTJ,EAAS,CAAEH,QAASO,EAAIE,KAAMd,KAAM,gBAEpC,EAAKS,SAAS,CACZgB,KAAM,GACNC,MAAO,GACPC,MAAO,GACP4B,OAAQ,KAGV,EAAKvC,MAAM8C,QAAQC,KAAK,KAjCf,4C,+GAoCD,IAAD,SACgClD,KAAKf,MAApC2B,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MAAO4B,EADrB,EACqBA,OAC5B,OACE,kBAACpC,EAAD,MACG,SAACJ,GAAW,IACHP,EAAaO,EAAbP,SACR,OACE,yBAAKoB,UAAU,aACb,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,aACb,0BAAM8B,SAAU,EAAKA,SAASzB,KAAK,EAAMzB,IACvC,kBAAC,EAAD,CACEuC,MAAM,OACNC,YAAY,aACZjC,MAAOU,EACPwB,SAAU,EAAKA,SACfxB,KAAK,OACLyB,IAAKK,EAAO9B,OAEd,kBAAC,EAAD,CACEsB,MAAM,QACNC,YAAY,cACZjC,MAAOW,EACPuB,SAAU,EAAKA,SACfxB,KAAK,QACLzB,KAAK,QACLkD,IAAKK,EAAO7B,QAEd,kBAAC,EAAD,CACEqB,MAAM,QACNC,YAAY,cACZjC,MAAOY,EACPsB,SAAU,EAAKA,SACfxB,KAAK,QACLyB,IAAKK,EAAO5B,QAGd,yBAAKC,UAAU,cACb,2BACE5B,KAAK,SACL4B,UAAU,0BACVb,MAAM,2B,GAzFHG,aCOV8C,EAXD,SAAChD,GACb,OACE,6BACE,wBAAIY,UAAU,aAAd,yBACA,uBAAGA,UAAU,QAAb,iCACA,uBAAGA,UAAU,kBAAb,iBACA,2BAAIZ,EAAMiD,MAAMC,OAAOzC,QCGd0C,EATE,WACf,OACE,6BACE,wBAAIvC,UAAU,aAAd,sBACA,uBAAGA,UAAU,QAAb,wCCiBSwC,E,4MApBbtE,MAAQ,CACNuE,MAAO,GACPC,KAAM,I,kEAEa,IAAD,OAClBC,MAAM,gDACHC,MAAK,SAAC5D,GAAD,OAASA,EAAI6D,UAClBD,MAAK,SAAC1D,GAAD,OAAU,EAAKL,SAAS,CAAE4D,MAAOvD,EAAKuD,MAAOC,KAAMxD,EAAKwD,Y,+BAExD,IAAD,EACiBzD,KAAKf,MAArBuE,EADD,EACCA,MAAOC,EADR,EACQA,KACf,OACE,6BACE,4BAAKD,GACL,2BAAIC,Q,GAfOpD,aCuHJwD,E,4MAnHb5E,MAAQ,CACN2B,KAAM,GACNC,MAAO,GACPC,MAAO,GACP4B,OAAQ,I,EAgBVN,SAAW,SAACO,GACV,EAAK/C,SAAL,eAAiB+C,EAAEC,OAAOhC,KAAO+B,EAAEC,OAAO1C,S,EAG5C2C,S,uCAAW,WAAOlD,EAAUgD,GAAjB,2BAAAjC,EAAA,yDACTiC,EAAEG,iBACMvD,EAAO,EAAKY,MAAMiD,MAAMC,OAAxB9D,GAFC,EAGsB,EAAKN,MAA5B2B,EAHC,EAGDA,KAAMC,EAHL,EAGKA,MAAOC,EAHZ,EAGYA,MAER,KAATF,EALK,yCAMA,EAAKhB,SAAS,CAAE8C,OAAQ,CAAE9B,KAAM,uBANhC,UAQK,KAAVC,EARK,yCASA,EAAKjB,SAAS,CAAE8C,OAAQ,CAAE7B,MAAO,wBATjC,UAWK,KAAVC,EAXK,yCAYA,EAAKlB,SAAS,CAAE8C,OAAQ,CAAE5B,MAAO,wBAZjC,cAeHgD,EAAgB,CACpBlD,OACAC,QACAC,SAlBO,UAqBSjB,IAAMkE,IAAN,qDAC8BxE,GAC9CuE,GAvBO,QAqBH/D,EArBG,OAyBTJ,EAAS,CAAEH,QAASO,EAAIE,KAAMd,KAAM,mBAEpC,EAAKS,SAAS,CACZgB,KAAM,GACNC,MAAO,GACPC,MAAO,GACP4B,OAAQ,KAGV,EAAKvC,MAAM8C,QAAQC,KAAK,KAlCf,4C,mPAhBD3D,EAAOS,KAAKG,MAAMiD,MAAMC,OAAxB9D,G,SACUM,IAAMC,IAAN,qDAC8BP,I,OAD1CQ,E,OAGNC,KAAKJ,SAAS,CACZgB,KAAMb,EAAIE,KAAKW,KACfC,MAAOd,EAAIE,KAAKY,MAChBC,MAAOf,EAAIE,KAAKa,MAChBvB,GAAIQ,EAAIE,KAAKV,K,qIA6CP,IAAD,SACgCS,KAAKf,MAApC2B,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MAAO4B,EADrB,EACqBA,OAC5B,OACE,kBAACpC,EAAD,MACG,SAACJ,GAAW,IACHP,EAAaO,EAAbP,SACR,OACE,yBAAKoB,UAAU,aACb,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,aACb,0BAAM8B,SAAU,EAAKA,SAASzB,KAAK,EAAMzB,IACvC,kBAAC,EAAD,CACEuC,MAAM,OACNC,YAAY,aACZjC,MAAOU,EACPwB,SAAU,EAAKA,SACfxB,KAAK,OACLyB,IAAKK,EAAO9B,OAEd,kBAAC,EAAD,CACEsB,MAAM,QACNC,YAAY,cACZjC,MAAOW,EACPuB,SAAU,EAAKA,SACfxB,KAAK,QACLzB,KAAK,QACLkD,IAAKK,EAAO7B,QAEd,kBAAC,EAAD,CACEqB,MAAM,QACNC,YAAY,cACZjC,MAAOY,EACPsB,SAAU,EAAKA,SACfxB,KAAK,QACLyB,IAAKK,EAAO5B,QAGd,yBAAKC,UAAU,cACb,2BACE5B,KAAK,SACL4B,UAAU,0BACVb,MAAM,8B,GAvGFG,aC6BX2D,MAtBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,yBAAKjD,UAAU,OACb,kBAAC,EAAD,CAAQc,MAAM,oBACd,yBAAKd,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,IAAIC,UAAW1C,IACjC,kBAAC,IAAD,CAAOwC,OAAK,EAACC,KAAK,SAASC,UAAWhB,IACtC,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,OAAOC,UAAW1B,IACpC,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,QAAQC,UAAWZ,IACrC,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,YAAYC,UAAWN,IACzC,kBAAC,IAAD,CAAOM,UAAWb,UCbZc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnB,MACvB,2DCZNoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpB,MAAK,SAAAqB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7db78eb9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../Context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  deleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo,\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                />\r\n                <i\r\n                  style={{ color: 'red', float: 'right' }}\r\n                  className=\"fas fa-times\"\r\n                  onClick={this.deleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      float: 'right',\r\n                      marginRight: '20px',\r\n                      cursor: 'pointer',\r\n                      fontSize: '25px',\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../Context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n  const { brand } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {brand}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\" style={{flexDirection: \"row\"}}>\r\n            <li className=\"nav-item ml-4\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item ml-4\">\r\n              <Link to=\"/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item ml-4\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"></i> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nHeader.defaultProps = {\r\n  brand: 'My App',\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  type,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  err,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': err\r\n        })}\r\n        autoComplete=\"off\"\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {err && <div className=\"invalid-feedback\">{err}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  err: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text',\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../Context';\r\nimport { v4 as uuid } from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === '') {\r\n      return this.setState({ errors: { name: 'Name is required' } });\r\n    }\r\n    if (email === '') {\r\n      return this.setState({ errors: { email: 'Email is required' } });\r\n    }\r\n    if (phone === '') {\r\n      return this.setState({ errors: { phone: 'Phone is required' } });\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n    dispatch({ payload: res.data, type: 'ADD_CONTACT' });\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    name=\"name\"\r\n                    err={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    err={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    name=\"phone\"\r\n                    err={errors.phone}\r\n                  />\r\n\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"submit\"\r\n                      className=\"btn btn-light btn-block\"\r\n                      value=\"Add Contact\"\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from 'react';\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n      <p>{props.match.params.name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Page not found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist!!!</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: '',\r\n  };\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/2')\r\n      .then((res) => res.json())\r\n      .then((data) => this.setState({ title: data.title, body: data.body }));\r\n  }\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../Context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    this.setState({\r\n      name: res.data.name,\r\n      email: res.data.email,\r\n      phone: res.data.phone,\r\n      id: res.data.id,\r\n    });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { id } = this.props.match.params;\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === '') {\r\n      return this.setState({ errors: { name: 'Name is required' } });\r\n    }\r\n    if (email === '') {\r\n      return this.setState({ errors: { email: 'Email is required' } });\r\n    }\r\n    if (phone === '') {\r\n      return this.setState({ errors: { phone: 'Phone is required' } });\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n    dispatch({ payload: res.data, type: 'UPDATE_CONTACT' });\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    name=\"name\"\r\n                    err={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    err={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    name=\"phone\"\r\n                    err={errors.phone}\r\n                  />\r\n\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"submit\"\r\n                      className=\"btn btn-light btn-block\"\r\n                      value=\"Update Contact\"\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contact/Contacts';\nimport Header from './components/layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Provider from './components/Context';\nimport AddContact from './components/contact/addContact';\nimport About from './components/page/About';\nimport NotFound from './components/page/NotFound';\nimport Test from './components/test/Test';\nimport EditContact from './components/contact/EditContact';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header brand=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/add\" component={AddContact} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route exact path=\"/edit/:id\" component={EditContact} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}